// Generated by CoffeeScript 1.6.3
(function() {
  var Helpers;

  Helpers = (function() {
    function Helpers() {}

    Helpers.urlencode = function(param) {
      param = (param + '').toString();
      return encodeURIComponent(param).replace(/!/g, '%21').replace(/'/g, '%27').replace(/\(/g, '%28').replace(/\)/g, '%29').replace(/\*/g, '%2A').replace(/\~/g, '%7E').replace(/%20/g, '+');
    };

    Helpers.buildQuery = function(params) {
      var add, buildParams, key, result, value, _i, _len;
      result = [];
      add = function(key, value) {
        value = typeof value === 'function' ? value() : (value === null ? '' : value);
        return result.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));
      };
      buildParams = function(key, value) {
        var i, k, v, _i, _len, _results, _results1;
        if (Object.prototype.toString.call(value) === '[object Array]') {
          _results = [];
          for (i = _i = 0, _len = value.length; _i < _len; i = ++_i) {
            v = value[i];
            if (/\[\]$/.test(key) === true) {
              _results.push(add(key, v));
            } else {
              _results.push(buildParams(key + '[' + (typeof v === 'object' ? i : '') + ']', v));
            }
          }
          return _results;
        } else if (Object.prototype.toString.call(value) === '[object Object]') {
          _results1 = [];
          for (k in value) {
            v = value[k];
            _results1.push(buildParams(key + '[' + k + ']', v));
          }
          return _results1;
        } else {
          return add(key, value);
        }
      };
      if (Object.prototype.toString.call(params) === '[object Array]') {
        for (key = _i = 0, _len = params.length; _i < _len; key = ++_i) {
          value = params[key];
          add(key, value);
        }
      } else {
        for (key in params) {
          value = params[key];
          buildParams(key, value);
        }
      }
      return result.join('&').replace(/%20/g, '+');
    };

    return Helpers;

  })();

  module.exports = Helpers;

}).call(this);
