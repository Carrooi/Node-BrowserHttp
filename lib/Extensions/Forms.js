// Generated by CoffeeScript 1.7.1
(function() {
  var $, Forms,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  $ = null;

  Forms = (function() {
    Forms.prototype.http = null;

    function Forms(jQuery) {
      this.onFormSubmitted = __bind(this.onFormSubmitted, this);
      $ = jQuery;
      $(document).on('submit', 'form.ajax:not(.not-ajax)', this.onFormSubmitted);
      $(document).on('click', 'form.ajax:not(.not-ajax) :submit', this.onFormSubmitted);
    }

    Forms.prototype.onFormSubmitted = function(e) {
      var el, form, i, name, options, sendValues, val, value, values, _i, _len;
      e.preventDefault();
      el = $(e.target);
      sendValues = {};
      if (el.is(':submit')) {
        form = el.closest('form');
        sendValues[el.attr('name')] = el.val() || '';
      } else if (el.is('form')) {
        form = el;
      } else {
        return null;
      }
      if (form.get(0).onsubmit && form.get(0).onsubmit() === false) {
        return null;
      }
      values = form.serializeArray();
      for (i = _i = 0, _len = values.length; _i < _len; i = ++_i) {
        value = values[i];
        name = value.name;
        if (typeof sendValues[name] === 'undefined') {
          sendValues[name] = value.value;
        } else {
          val = sendValues[name];
          if (Object.prototype.toString.call(val) !== '[object Array]') {
            val = [val];
          }
          val.push(value.value);
          sendValues[name] = val;
        }
      }
      options = {
        data: sendValues,
        type: form.attr('method') || 'GET'
      };
      if (this.http === null) {
        throw new Error('Please add Forms extension into http object with addExtension method.');
      }
      return this.http.request(form.attr('action'), options);
    };

    return Forms;

  })();

  module.exports = Forms;

}).call(this);
